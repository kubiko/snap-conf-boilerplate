#!/bin/bash

echo -e "${SNAP_NAME}: open source automation software for your home\n"
echo -e "Make sure you have connected all interfaces, check more by calling $ snap interfaces"
echo -e "Basic set can connected using helper script $ /snap/$SNAP_NAME/current/bin/connect-interfaces\n"
# parse config file for supported settings keys
echo -e "${SNAP_NAME} supports settings keys"
echo -e "values can be changed by calling\n$ snap set $SNAP_NAME <key name>='<key value>'"
echo -e "list of supported keys:"

processing_top_key_start() {
    TAB="${TAB}\t"
    echo -e "${TAB}${1}"
}

processing_top_key_end() {
    TAB=${TAB%"\t"}
    echo -e "\n"
}

handle_key_value() {
    key=$1
    shift
    echo -e "${TAB}\t${key}\t$@"
}

# callback function to process one configuration
# set_config ${key} ${ENV} ${VALUE} ${DEFAULT} "${DESCRIPTION}"
set_config() {
      echo -e "${TAB}\t${1}:   ${5}"
      if [ "x${3}" == "x" ]; then
          echo -e "${TAB}\t\tNo value set, using default value: '${4}'"
      else
          echo -e "${TAB}\t\tCurrent value set to: '${3}', (default value: '${4}')"
      fi
}


source ${SNAP}/bin/snap-config
read_snap_config

# Process additonal configuration from snap settings
echo -e "\tMore configuration:"
while read line
do
    process_line $line
done < <(snapctl get -d more-config | jq -r 'keys[] as $k | "\($k) \(.[$k] )"')
echo -e "\n${SNAP_NAME} restarts when configuration is changed to apply changes"

